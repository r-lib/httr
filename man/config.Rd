% Generated by roxygen2 (4.0.1): do not edit by hand
\name{config}
\alias{config}
\title{Set curl options.}
\usage{
config(...)
}
\arguments{
\item{...}{named Curl options.}
}
\description{
Generally you should only need to use this function to set CURL options
directly if there isn't already a helpful wrapper function, like
\code{\link{set_cookies}}, \code{\link{add_headers}} or
\code{\link{authenticate}}. To use this function effectively requires
some knowledge of CURL, and CURL options. Use \code{\link{httr_options}} to
see a complete list of available options. To see the libcurl documentation
for a given option, use \code{\link{curl_docs}}.
}
\details{
Unlike Curl (and RCurl), all configuration options are per request, not
per handle.
}
\examples{
#First example: use HTTP
result_1 <-  GET(
  url = "http://rstudio.com",
)
result_1$status_code

#Second example: use HTTPS using the SSL certificates provided in httr.
#   This configuration is scoped for the call.
cert_location2 <- system.file("cacert.pem", package = "httr")
curl_options <- RCurl::curlOptions(cainfo = cert_location2, sslversion = 3)

result_2 <- GET(
  url = "https://google.com",
  config = curl_options
)
result_2$status_code

#Third example: Like before, but scoped for all subsequent calls.
cert_location3 <- system.file("cacert.pem", package = "httr")
config(RCurl::curlOptions(cainfo = cert_location3, sslversion = 3))

result_3a <- GET(
  url = "https://google.com"
)
result_3a$status_code

result_3b <- GET(
  url = "https://google.com"
)
result_3b$status_code
}
\seealso{
\code{\link{set_config}} to set global config defaults, and
 \code{\link{with_config}} to temporarily run code with set options.

Other config: \code{\link{add_headers}};
  \code{\link{authenticate}}; \code{\link{set_cookies}};
  \code{\link{timeout}}; \code{\link{use_proxy}};
  \code{\link{user_agent}}; \code{\link{verbose}}

Other ways to set configuration: \code{\link{reset_config}},
  \code{\link{set_config}}; \code{\link{with_config}},
  \code{\link{with_verbose}}
}

